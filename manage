#!/usr/bin/env bash

Color_Off='\033[0m'       # Text Reset
White='\033[0;37m'        # White
BCyan='\033[1;36m'        # Cyan

help_env() {
    printf "${BCyan}"
cat << "EOF"
  _____  ____  _____  ___  ____
 / ___/ /    ||     |/  _]|    \
(   \_ |  o  ||   __/  [_ |  D  )
 \__  ||     ||  |_|    _]|    /
 /  \ ||  _  ||   _]   [_ |    \
 \    ||  |  ||  | |     ||  .  \
  \___||__|__||__| |_____||__|\_|
EOF
    printf "${Color_Off}"

    echo "------------------------------------------------------------------------"
    echo "Usage: `basename $0` [-h]"
    echo "Usage: $0 [option...] --{init|start|halt|clean|stats}"
    echo ""
    echo "   --- MANAGEMENT ---"
    echo "   -i, --init, init           Initializes the development environment."
    echo "   -s, --start, start         Starts all configured services."
    echo "   -p, --halt, halt           Stops all configured services."
    echo "   -r, --relaod, reload       Restart all configured services."
    echo "   -b, --rebuild, rebuild     Rebuild all configured services."
    echo "   -c, --clean, clean         Cleans containers, volumes, images."
    echo ""
    echo "   --- UTILITIES ---"
    echo "   -o, --onion, onion         Get the onion URL."
    echo "   -h, --help, help           Shows this help box."
    echo "------------------------------------------------------------------------"
}

SCRIPT_DIR=$(dirname "$0")/scripts
while :
do
  OPT=$(echo "$1" | awk '{print tolower($0)}')
  case "$OPT" in
    -h | --help | help | "")
      help_env
      break ;;
    -i | --init | init)
      bash ${SCRIPT_DIR}/init.sh; # System initialization
      break ;;
    -s | --start | start)
      bash ${SCRIPT_DIR}/start.sh; # Start all services
      break ;;
    -p | --halt | halt)
      bash ${SCRIPT_DIR}/stop.sh; # Stop all services
      break ;;
    -r | --reload | reload)
      bash ${SCRIPT_DIR}/reload.sh; # Reload all services
      break ;;
    -c | --clean | clean)
      bash ${SCRIPT_DIR}/clean.sh; # Clean everything
      break ;;
    -o | --onion | onion)
      bash ${SCRIPT_DIR}/get-onion.sh; # Get the onion URL
      break ;;
    *)
      echo "Error: Unknown option: $1" >&2
      help_env
      exit 1 ;;
    *)
  esac
done
